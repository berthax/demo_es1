<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.4.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.troila.os</groupId>
	<artifactId>package-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>package-demo</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.flatbuffers</groupId>
			<artifactId>flatbuffers-java</artifactId>
			<version>1.11.0</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-freemarker</artifactId>
		</dependency>
	</dependencies>

	<!-- build配置 -->
	<build>
		<!-- 打包后的启动jar名称 -->
		<finalName>package-test</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>db/*.sql</include>
					<include>mapper/**/*.xml</include>
					<include>static/**</include>
					<include>templates/**</include>
					<!-- 如果各个环境的jks都是一样，则可以直接打入到启动jar包中 -->
					<!--<include>test.jks</include> -->
				</includes>
			</resource>
			<!-- 过滤配置文件到config目录 -->
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<targetPath>config</targetPath>
				<includes>
					<include>application.yml</include>
					<include>application-${profileActive}.yml</include>
					<include>**/*.properties</include>
					<!-- 如果各个环境的jks不一样，则配置到外部config目录中 java代码中通过ClassPathFileUtil.getFile()获取 -->
					<include>test.jks</include>
					<include>test.txt</include>
				</includes>
			</resource>

			<!-- 过滤脚本文件到bin目录 -->
			<resource>
				<directory>src/bin</directory>
				<filtering>true</filtering>
				<targetPath>bin</targetPath>
				<includes>
					<include>*.bat</include>
					<include>*.sh</include>
				</includes>
			</resource>

		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<!-- 项目启动类 -->
							<mainClass>com.troila.os.test.PackageDemoApplication</mainClass>
							<!-- 依赖的jar的目录前缀 -->
							<classpathPrefix>../lib</classpathPrefix>
							<addClasspath>true</addClasspath>
						</manifest>
					</archive>
					<!-- 项目启动jar包排除目录 -->
					<excludes>
						<exclude>bin/**</exclude>
						<exclude>config/**</exclude>
						<exclude>logs/**</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<layout>ZIP</layout>
					<includes>
						<!-- 项目启动jar包中排除依赖包 -->
						<include>
							<groupId>non-exists</groupId>
							<artifactId>non-exists</artifactId>
						</include>
					</includes>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<!-- <version>3.1.0</version> -->
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>target/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<includeScope>compile</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<!-- <version>3.1.0</version> -->
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<!-- 打包时跳过测试 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>

			<!-- 打包插件 -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<!-- <version>3.1.0</version> -->
				<configuration>
					<descriptors>
						<descriptor>dep.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
